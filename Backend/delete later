router.post("/upload/upload2", function (req, res) {
  let sampleFile;
  let uploadPath;

  if (!req.files || Object.keys(req.files).length === 0) {
    res.status(400).send("No files were uploaded.");
    return;
  }

  console.log(req.files.sampleFile, "req.files >>>"); // eslint-disable-line

  sampleFile = req.files.sampleFile;

  uploadPath = __dirname + "/uploads/" + sampleFile.name;

  sampleFile.mv(uploadPath, function (err) {
    if (err) {
      return res.status(500).send(err);
    }

    res.send("File uploaded to " + uploadPath);
  });
});

// ********************************************************
// *******************************
router.post("/upload/upload", async (req, res) => {
  try {
    const file = req.files.xyz;
    const fileName = file.name;
    const size = file.data.length;
    const extension = path.extname(fileName);
    const allowedExtensions = /png|jpeg|jpg|gif/;

    if (!allowedExtensions.test(extension)) throw "Unsupported extension";
    if (size > 5000000) throw "File must be less than 5mb";

    const md5 = file.md5;
    const URL = "/uploads/" + md5 + extension;

    await util.promisify(file.mv)("./public" + URL);

    res.json({ message: "file uploaded successfully", url: URL });
  } catch (err) {
    console.log(err);
    res.status(500).json({
      message: err,
    });
  }
});
// *******************************
// *******************************

router.post("/upload/upload/open", function (req, res) {
  let sampleFile;
  let uploadPath;

  if (!req.files || Object.keys(req.files).length === 0) {
    return res.status(400).send("No files were uploaded.");
  }

  // The name of the input field (i.e. "sampleFile") is used to retrieve the uploaded file
  sampleFile = req.files.sampleFile;
  uploadPath = pool.query("INSERT INTO test(test) VALUES($1)", sampleFile);

  // Use the mv() method to place the file somewhere on your server
  sampleFile.mv(uploadPath, function (err) {
    if (err) return res.status(500).send(err);

    res.send("File uploaded!");
  });
});

router.route("/upload/upload").get((req, response) => {
  pool.query("SELECT * FROM testt", (err, res) => {
    if (err) return err;
    response.json(res.rows);
    // response.send("jee");
  });
});
